{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst bourne = require('@hapi/bourne');\nconst utils = require('./utils');\n\n// Allowed whitespace is defined in RFC 7159\n// http://www.rfc-editor.org/rfc/rfc7159.txt\nconst strictJSONReg = /^[\\x20\\x09\\x0a\\x0d]*(\\[|\\{)/;\n\n/**\n * Return a Promise which parses json requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function (req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '1mb';\n  const strict = opts.strict !== false;\n  const protoAction = opts.onProtoPoisoning || 'error';\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = parse(str);\n    return opts.returnRawBody ? {\n      parsed,\n      raw: str\n    } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n  function parse(str) {\n    if (!strict) return str ? bourne.parse(str, {\n      protoAction\n    }) : str;\n    // strict mode always return object\n    if (!str) return {};\n    // strict JSON test\n    if (!strictJSONReg.test(str)) {\n      throw new SyntaxError('invalid JSON, only supports object and array');\n    }\n    return bourne.parse(str, {\n      protoAction\n    });\n  }\n};","map":{"version":3,"names":["raw","require","inflate","bourne","utils","strictJSONReg","module","exports","req","opts","clone","len","headers","encoding","length","limit","strict","protoAction","onProtoPoisoning","str","parsed","parse","returnRawBody","err","status","body","test","SyntaxError"],"sources":["C:/Users/ytBad/OneDrive/바탕 화면/all/project/my-app/node_modules/co-body/lib/json.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst bourne = require('@hapi/bourne');\nconst utils = require('./utils');\n\n// Allowed whitespace is defined in RFC 7159\n// http://www.rfc-editor.org/rfc/rfc7159.txt\nconst strictJSONReg = /^[\\x20\\x09\\x0a\\x0d]*(\\[|\\{)/;\n\n/**\n * Return a Promise which parses json requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '1mb';\n  const strict = opts.strict !== false;\n  const protoAction = opts.onProtoPoisoning || 'error';\n\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = parse(str);\n    return opts.returnRawBody ? { parsed, raw: str } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n\n  function parse(str) {\n    if (!strict) return str ? bourne.parse(str, { protoAction }) : str;\n    // strict mode always return object\n    if (!str) return {};\n    // strict JSON test\n    if (!strictJSONReg.test(str)) {\n      throw new SyntaxError('invalid JSON, only supports object and array');\n    }\n    return bourne.parse(str, { protoAction });\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC/B,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,MAAME,MAAM,GAAGF,OAAO,CAAC,cAAc,CAAC;AACtC,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA,MAAMI,aAAa,GAAG,6BAA6B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,gBAAeC,GAAG,EAAEC,IAAI,EAAE;EACzCD,GAAG,GAAGA,GAAG,CAACA,GAAG,IAAIA,GAAG;EACpBC,IAAI,GAAGL,KAAK,CAACM,KAAK,CAACD,IAAI,CAAC;;EAExB;EACA,MAAME,GAAG,GAAGH,GAAG,CAACI,OAAO,CAAC,gBAAgB,CAAC;EACzC,MAAMC,QAAQ,GAAGL,GAAG,CAACI,OAAO,CAAC,kBAAkB,CAAC,IAAI,UAAU;EAC9D,IAAID,GAAG,IAAIE,QAAQ,KAAK,UAAU,EAAEJ,IAAI,CAACK,MAAM,GAAG,CAAC,CAACH,GAAG;EACvDF,IAAI,CAACI,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,IAAI,MAAM;EACvCJ,IAAI,CAACM,KAAK,GAAGN,IAAI,CAACM,KAAK,IAAI,KAAK;EAChC,MAAMC,MAAM,GAAGP,IAAI,CAACO,MAAM,KAAK,KAAK;EACpC,MAAMC,WAAW,GAAGR,IAAI,CAACS,gBAAgB,IAAI,OAAO;EAEpD,MAAMC,GAAG,GAAG,MAAMnB,GAAG,CAACE,OAAO,CAACM,GAAG,CAAC,EAAEC,IAAI,CAAC;EACzC,IAAI;IACF,MAAMW,MAAM,GAAGC,KAAK,CAACF,GAAG,CAAC;IACzB,OAAOV,IAAI,CAACa,aAAa,GAAG;MAAEF,MAAM;MAAEpB,GAAG,EAAEmB;IAAI,CAAC,GAAGC,MAAM;EAC3D,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZA,GAAG,CAACC,MAAM,GAAG,GAAG;IAChBD,GAAG,CAACE,IAAI,GAAGN,GAAG;IACd,MAAMI,GAAG;EACX;EAEA,SAASF,KAAKA,CAACF,GAAG,EAAE;IAClB,IAAI,CAACH,MAAM,EAAE,OAAOG,GAAG,GAAGhB,MAAM,CAACkB,KAAK,CAACF,GAAG,EAAE;MAAEF;IAAY,CAAC,CAAC,GAAGE,GAAG;IAClE;IACA,IAAI,CAACA,GAAG,EAAE,OAAO,CAAC,CAAC;IACnB;IACA,IAAI,CAACd,aAAa,CAACqB,IAAI,CAACP,GAAG,CAAC,EAAE;MAC5B,MAAM,IAAIQ,WAAW,CAAC,8CAA8C,CAAC;IACvE;IACA,OAAOxB,MAAM,CAACkB,KAAK,CAACF,GAAG,EAAE;MAAEF;IAAY,CAAC,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst qs = require('qs');\nconst utils = require('./utils');\n\n/**\n * Return a Promise which parses x-www-form-urlencoded requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function (req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n  const queryString = opts.queryString || {};\n\n  // keep compatibility with qs@4\n  if (queryString.allowDots === undefined) queryString.allowDots = true;\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '56kb';\n  opts.qs = opts.qs || qs;\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = opts.qs.parse(str, queryString);\n    return opts.returnRawBody ? {\n      parsed,\n      raw: str\n    } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n};","map":{"version":3,"names":["raw","require","inflate","qs","utils","module","exports","req","opts","clone","queryString","allowDots","undefined","len","headers","encoding","length","limit","str","parsed","parse","returnRawBody","err","status","body"],"sources":["C:/Users/ytBad/OneDrive/바탕 화면/all/project/my-app/node_modules/co-body/lib/form.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst qs = require('qs');\nconst utils = require('./utils');\n\n/**\n * Return a Promise which parses x-www-form-urlencoded requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n  const queryString = opts.queryString || {};\n\n  // keep compatibility with qs@4\n  if (queryString.allowDots === undefined) queryString.allowDots = true;\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '56kb';\n  opts.qs = opts.qs || qs;\n\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = opts.qs.parse(str, queryString);\n    return opts.returnRawBody ? { parsed, raw: str } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC/B,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAG,gBAAeC,GAAG,EAAEC,IAAI,EAAE;EACzCD,GAAG,GAAGA,GAAG,CAACA,GAAG,IAAIA,GAAG;EACpBC,IAAI,GAAGJ,KAAK,CAACK,KAAK,CAACD,IAAI,CAAC;EACxB,MAAME,WAAW,GAAGF,IAAI,CAACE,WAAW,IAAI,CAAC,CAAC;;EAE1C;EACA,IAAIA,WAAW,CAACC,SAAS,KAAKC,SAAS,EAAEF,WAAW,CAACC,SAAS,GAAG,IAAI;;EAErE;EACA,MAAME,GAAG,GAAGN,GAAG,CAACO,OAAO,CAAC,gBAAgB,CAAC;EACzC,MAAMC,QAAQ,GAAGR,GAAG,CAACO,OAAO,CAAC,kBAAkB,CAAC,IAAI,UAAU;EAC9D,IAAID,GAAG,IAAIE,QAAQ,KAAK,UAAU,EAAEP,IAAI,CAACQ,MAAM,GAAG,CAAC,CAACH,GAAG;EACvDL,IAAI,CAACO,QAAQ,GAAGP,IAAI,CAACO,QAAQ,IAAI,MAAM;EACvCP,IAAI,CAACS,KAAK,GAAGT,IAAI,CAACS,KAAK,IAAI,MAAM;EACjCT,IAAI,CAACL,EAAE,GAAGK,IAAI,CAACL,EAAE,IAAIA,EAAE;EAEvB,MAAMe,GAAG,GAAG,MAAMlB,GAAG,CAACE,OAAO,CAACK,GAAG,CAAC,EAAEC,IAAI,CAAC;EACzC,IAAI;IACF,MAAMW,MAAM,GAAGX,IAAI,CAACL,EAAE,CAACiB,KAAK,CAACF,GAAG,EAAER,WAAW,CAAC;IAC9C,OAAOF,IAAI,CAACa,aAAa,GAAG;MAAEF,MAAM;MAAEnB,GAAG,EAAEkB;IAAI,CAAC,GAAGC,MAAM;EAC3D,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZA,GAAG,CAACC,MAAM,GAAG,GAAG;IAChBD,GAAG,CAACE,IAAI,GAAGN,GAAG;IACd,MAAMI,GAAG;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nclass LRU {\n  constructor(max) {\n    this.max = max;\n    this.size = 0;\n    this.cache = new Map();\n    this._cache = new Map();\n  }\n  get(key, options) {\n    let item = this.cache.get(key);\n    const maxAge = options && options.maxAge;\n    // only call Date.now() when necessary\n    let now;\n    function getNow() {\n      now = now || Date.now();\n      return now;\n    }\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0;\n        item.value = undefined;\n      } else {\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0;\n          item.expired = expired;\n        }\n      }\n      return item.value;\n    }\n\n    // try to read from _cache\n    item = this._cache.get(key);\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0;\n        item.value = undefined;\n      } else {\n        // not expired, save to cache\n        this._update(key, item);\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0;\n          item.expired = expired;\n        }\n      }\n      return item.value;\n    }\n  }\n  set(key, value, options) {\n    const maxAge = options && options.maxAge;\n    const expired = maxAge ? Date.now() + maxAge : 0;\n    let item = this.cache.get(key);\n    if (item) {\n      item.expired = expired;\n      item.value = value;\n    } else {\n      item = {\n        value,\n        expired\n      };\n      this._update(key, item);\n    }\n  }\n  keys() {\n    const cacheKeys = new Set();\n    const now = Date.now();\n    for (const entry of this.cache.entries()) {\n      checkEntry(entry);\n    }\n    for (const entry of this._cache.entries()) {\n      checkEntry(entry);\n    }\n    function checkEntry(entry) {\n      const key = entry[0];\n      const item = entry[1];\n      if (entry[1].value && !entry[1].expired || item.expired >= now) {\n        cacheKeys.add(key);\n      }\n    }\n    return Array.from(cacheKeys.keys());\n  }\n  reset() {\n    this.size = 0;\n    this.cache.clear();\n    this._cache.clear();\n  }\n  _update(key, item) {\n    this.cache.set(key, item);\n    this.size++;\n    if (this.size >= this.max) {\n      this.size = 0;\n      this._cache = this.cache;\n      this.cache = new Map();\n    }\n  }\n}\nmodule.exports = LRU;","map":{"version":3,"names":["LRU","constructor","max","size","cache","Map","_cache","get","key","options","item","maxAge","now","getNow","Date","expired","value","undefined","_update","set","keys","cacheKeys","Set","entry","entries","checkEntry","add","Array","from","reset","clear","module","exports"],"sources":["C:/Users/ytBad/OneDrive/바탕 화면/all/project/my-app/node_modules/ylru/index.js"],"sourcesContent":["'use strict';\n\nclass LRU {\n  constructor(max) {\n    this.max = max;\n    this.size = 0;\n    this.cache = new Map();\n    this._cache = new Map();\n  }\n\n  get(key, options) {\n    let item = this.cache.get(key);\n    const maxAge = options && options.maxAge;\n    // only call Date.now() when necessary\n    let now;\n    function getNow() {\n      now = now || Date.now();\n      return now;\n    }\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0;\n        item.value = undefined;\n      } else {\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0;\n          item.expired = expired;\n        }\n      }\n      return item.value;\n    }\n\n    // try to read from _cache\n    item = this._cache.get(key);\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0;\n        item.value = undefined;\n      } else {\n        // not expired, save to cache\n        this._update(key, item);\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0;\n          item.expired = expired;\n        }\n      }\n      return item.value;\n    }\n  }\n\n  set(key, value, options) {\n    const maxAge = options && options.maxAge;\n    const expired = maxAge ? Date.now() + maxAge : 0;\n    let item = this.cache.get(key);\n    if (item) {\n      item.expired = expired;\n      item.value = value;\n    } else {\n      item = {\n        value,\n        expired,\n      };\n      this._update(key, item);\n    }\n  }\n\n  keys() {\n    const cacheKeys = new Set();\n    const now = Date.now();\n\n    for (const entry of this.cache.entries()) {\n      checkEntry(entry);\n    }\n\n    for (const entry of this._cache.entries()) {\n      checkEntry(entry);\n    }\n\n    function checkEntry(entry) {\n      const key = entry[0];\n      const item = entry[1];\n      if (entry[1].value && (!entry[1].expired) || item.expired >= now) {\n        cacheKeys.add(key);\n      }\n    }\n\n    return Array.from(cacheKeys.keys());\n  }\n\n  reset() {\n    this.size = 0;\n    this.cache.clear();\n    this._cache.clear();\n  }\n\n  _update(key, item) {\n    this.cache.set(key, item);\n    this.size++;\n    if (this.size >= this.max) {\n      this.size = 0;\n      this._cache = this.cache;\n      this.cache = new Map();\n    }\n  }\n}\n\nmodule.exports = LRU;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst utils = require('./utils');\n\n/**\n * Return a Promise which parses text/plain requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function (req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding === undefined ? 'utf8' : opts.encoding;\n  opts.limit = opts.limit || '1mb';\n  const str = await raw(inflate(req), opts);\n  // ensure return the same format with json / form\n  return opts.returnRawBody ? {\n    parsed: str,\n    raw: str\n  } : str;\n};","map":{"version":3,"names":["raw","require","inflate","utils","module","exports","req","opts","clone","len","headers","encoding","length","undefined","limit","str","returnRawBody","parsed"],"sources":["C:/Users/ytBad/OneDrive/바탕 화면/all/project/my-app/node_modules/co-body/lib/text.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst utils = require('./utils');\n\n/**\n * Return a Promise which parses text/plain requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding === undefined ? 'utf8' : opts.encoding;\n  opts.limit = opts.limit || '1mb';\n\n  const str = await raw(inflate(req), opts);\n  // ensure return the same format with json / form\n  return opts.returnRawBody ? { parsed: str, raw: str } : str;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC/B,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,gBAAeC,GAAG,EAAEC,IAAI,EAAE;EACzCD,GAAG,GAAGA,GAAG,CAACA,GAAG,IAAIA,GAAG;EACpBC,IAAI,GAAGJ,KAAK,CAACK,KAAK,CAACD,IAAI,CAAC;;EAExB;EACA,MAAME,GAAG,GAAGH,GAAG,CAACI,OAAO,CAAC,gBAAgB,CAAC;EACzC,MAAMC,QAAQ,GAAGL,GAAG,CAACI,OAAO,CAAC,kBAAkB,CAAC,IAAI,UAAU;EAC9D,IAAID,GAAG,IAAIE,QAAQ,KAAK,UAAU,EAAEJ,IAAI,CAACK,MAAM,GAAG,CAAC,CAACH,GAAG;EACvDF,IAAI,CAACI,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,KAAKE,SAAS,GAAG,MAAM,GAAGN,IAAI,CAACI,QAAQ;EACpEJ,IAAI,CAACO,KAAK,GAAGP,IAAI,CAACO,KAAK,IAAI,KAAK;EAEhC,MAAMC,GAAG,GAAG,MAAMf,GAAG,CAACE,OAAO,CAACI,GAAG,CAAC,EAAEC,IAAI,CAAC;EACzC;EACA,OAAOA,IAAI,CAACS,aAAa,GAAG;IAAEC,MAAM,EAAEF,GAAG;IAAEf,GAAG,EAAEe;EAAI,CAAC,GAAGA,GAAG;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}